{"version":3,"sources":["../src/type.js"],"names":["operatorMap","unaryOperatorMap","generalOperatorMap","Object","assign","String","prototype","compProto","Float","opProto","Number","Boolean","ap10","a","b","asType","cc","ifEmpty","prep","decimal","Decimal","integer","Integer","string","data","toString","number","NaN","float","double","castAs","to","call","f","_binOp","op","invert","ret","undefined","_promote","_unaOp","c","constructor","d","UntypedAtomic","generalComp","opfn","$a","$b","x","and","impl","or","logic","not","opinv","ne","operator","comp","general","operatorName","hasUnaOp","hasOwnProperty","hasOp","bind","md","node","type","nodeData","has","obj","prop","m","reduce","o","$key","$value","l","e","qname","len","length","$name","$children","i","push","key","val"],"mappings":"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","sourcesContent":["import Decimal from \"big.js\";\n\nimport Integer from \"./types/integer\";\n\nimport Float from \"./types/float\";\n\nimport UntypedAtomic from \"./types/untyped-atomic\";\n\nimport opProto from \"./types/op-proto\";\n\nimport compProto from \"./types/comp-proto\";\n\nimport { stringJoin } from \"./string/value\";\n\nimport { error } from \"./error\";\n\nimport { forEach, filter, range, switchMap, pipe, first } from \"./seq\";\n\nimport { get as aGet } from \"./array\";\n\nimport { get as mGet } from \"./map\";\n\nimport { isUndef, isNull, isList, isMap } from \"./util\";\n\nimport { isVNode, traverse } from \"l3n\";\n\nimport { boolean, not } from \"./boolean/value\";\n\nimport * as impl from \"./impl\";\n\n// TODO complete math (e.g. type checks for idiv and friends)\n\n// one big pile\nexport const operatorMap = {\n\t\"+\": \"plus\",\n\t\"-\": \"minus\",\n\t\"*\": \"times\",\n\t\"div\": \"div\",\n\t\"/\": \"div\",\n\t\"idiv\": \"div\",\n\t\"eq\": \"eq\",\n\t\"ne\": \"eq\",\n\t\"gt\": \"gt\",\n\t\"lt\": \"lt\",\n\t\"ge\": \"gte\",\n\t\"le\": \"gte\",\n\t\"&&\": \"and\",\n\t\"||\": \"or\",\n\t\"!\": \"not\"\n};\n\nconst unaryOperatorMap = {\n\t\"-\": \"neg\"\n};\n\nexport const generalOperatorMap = {\n\t\">\": \"gt\",\n\t\"<\": \"lt\",\n\t\">=\": \"gte\",\n\t\"<=\": \"lte\",\n\t\"=\": \"eq\",\n\t\"!=\": \"eq\"\n};\n\n// mixin comparators\nObject.assign(String.prototype, compProto);\n\nObject.assign(Float.prototype, compProto, opProto);\n\nObject.assign(Number.prototype, compProto, opProto);\n\nObject.assign(Boolean.prototype, compProto);\n\n// TODO decimal opt-in/out\n\nconst ap10 = (a,b) => b(a);\n\nconst asType = (cc,ifEmpty = null,prep = ap10) => a => isUndef(a) ? cc : isNull(a) ? ifEmpty : prep(a,cc);\n\n// TODO create from Type classes\nexport const decimal = asType(Decimal);\n\nexport const integer = asType(Integer);\n\nexport const string = asType(String,\"\",a => isVNode(a) ? data(a).toString() : a.toString());\n\nexport const number = asType(Number,NaN,a => +a);\n\n// 32-bits float\nexport const float = asType(Float,NaN);\n\nexport const double = number;\n\nexport function castAs(a, b) {\n\treturn b(a);\n}\n\nexport function to(a, b) {\n\treturn range(b, a);\n}\n\nexport function call(f,...a) {\n\tif (isList(f)) {\n\t\treturn aGet(f,a[0]);\n\t} else if (isMap(f)) {\n\t\treturn mGet(f,a[0]);\n\t} else {\n\t\treturn f(...a);\n\t}\n}\n\nfunction _binOp(op, invert, a, b) {\n\tvar ret;\n\tif (a === undefined || b === undefined) {\n\t\treturn error(\"A value may never be undefined\");\n\t}\n\tif (typeof a[op] == \"function\") {\n\t\t[a,b] = _promote(a, b);\n\t\tret = a[op](b);\n\t} else {\n\t\treturn error(\"XPST0017\",\"Operator \" + op + \" not implemented\");\n\t}\n\treturn invert ? !ret : ret;\n}\n\n\nfunction _unaOp(op, invert, a) {\n\tvar ret;\n\tif (a === undefined) {\n\t\treturn error(\"A value may never be undefined\");\n\t}\n\tif (typeof a[op] == \"function\") {\n\t\tret = a[op]();\n\t} else {\n\t\treturn error(\"XPST0017\",\"Operator \" + op + \" not implemented\");\n\t}\n\treturn invert ? !ret : ret;\n}\n\nfunction _promote(a, b) {\n\t// TODO use JS type casting: 1 == \"1\"\n\t//If each operand is an instance of one of the types xs:string or xs:anyURI, then both operands are cast to type xs:string.\n\t//If each operand is an instance of one of the types xs:decimal or xs:float, then both operands are cast to type xs:float.\n\t//If each operand is an instance of one of the types xs:decimal, xs:float, or xs:double, then both operands are cast to type xs:double.\n\tvar c = a.constructor,\n\t\td = b.constructor;\n\tif (c == Number || d == Number) {\n\t\tif (c == Integer || c == Decimal || c == Float || c == UntypedAtomic) {\n\t\t\ta = +a.toString();\n\t\t\tc = Number;\n\t\t}\n\t\tif (d == Integer || d == Decimal || d == Float || d == UntypedAtomic) {\n\t\t\tb = +b.toString();\n\t\t\td = Number;\n\t\t}\n\t}\n\tif (c == Integer || d == Integer) {\n\t\tif (c == Decimal || c == UntypedAtomic) {\n\t\t\ta = c == UntypedAtomic ? new Integer(a.toString()) : a;\n\t\t\tc = Integer;\n\t\t}\n\t\tif (d == Decimal || d == UntypedAtomic) {\n\t\t\tb = d == UntypedAtomic ? new Integer(b.toString()) : b;\n\t\t\td = Integer;\n\t\t}\n\t}\n\tif (c == String || d == String) {\n\t\tif (c == UntypedAtomic) {\n\t\t\ta = a.toString();\n\t\t\tc = String;\n\t\t}\n\t\tif (d == UntypedAtomic) {\n\t\t\tb = a.toString();\n\t\t\td = String;\n\t\t}\n\t}\n\treturn [a, b];\n}\n\nfunction generalComp(opfn, $a, $b) {\n\treturn pipe(switchMap(a => forEach(b => opfn(a,b))($b)),first(x => x,false))($a);\n}\n\n\n/**\n * expect functions\n */\nexport function and($a, $b) {\n\treturn switchMap(boolean($a()), a => a ? switchMap(boolean($b()),impl.and(a)) : false);\n}\n\nexport function or($a, $b) {\n\treturn switchMap(boolean($a()), a => a ? true : switchMap(boolean($b()),impl.or(a)));\n}\n\nconst logic = {\n\tand: and,\n\tor: or,\n\tnot: not\n};\n\nconst opinv = {\n\tne: true,\n\t\"!=\": true\n};\n\n// NOTE cardinality tests should be taken care of by VM\nexport function op($a, operator, $b) {\n\tvar invert = false,\n\t\tcomp = false,\n\t\tgeneral = false,\n\t\toperatorName;\n\tvar opfn;\n\tif (typeof operator == \"string\") {\n\t\tinvert = opinv[operator];\n\t\tconst hasUnaOp = isUndef($b) && unaryOperatorMap.hasOwnProperty(operator);\n\t\tconst hasOp = hasUnaOp || operatorMap.hasOwnProperty(operator);\n\t\tif(!hasOp){\n\t\t\tgeneral = operator in generalOperatorMap;\n\t\t\tif(!general) return error(\"xxx\", \"No such operator\");\n\t\t\toperatorName = generalOperatorMap[operator];\n\t\t} else {\n\t\t\toperatorName = hasUnaOp ? unaryOperatorMap[operator] : operatorMap[operator];\n\t\t}\n\t\tif (logic[operatorName]) {\n\t\t\treturn logic[operatorName]($a, $b);\n\t\t} else if(hasUnaOp) {\n\t\t\topfn = _unaOp.bind(null, operatorName, invert);\n\t\t} else {\n\t\t\tcomp = compProto.hasOwnProperty(operatorName);\n\t\t\topfn = _binOp.bind(null, operatorName, invert);\n\t\t}\n\t\tif (comp) {\n\t\t\tconst md = forEach(data);\n\t\t\t$a = md($a);\n\t\t\t$b = md($b);\n\t\t}\n\t} else if (typeof operator == \"function\") {\n\t\topfn = operator;\n\t} else {\n\t\treturn error(\"XPST0017\", \"Unknown operator: \"+operator);\n\t}\n\tif(general) return generalComp(opfn, $a, $b);\n\tif(isNull($a) || isNull($b)) return null;\n\treturn opfn($a, $b);\n}\n\nexport function data($a) {\n\treturn switchMap($a, a => {\n\t\tif(isVNode(a)) {\n\t\t\treturn new UntypedAtomic(stringJoin(pipe(filter(node => node.type == 2 || node.type == 3),forEach(node => impl.nodeData(node)))(traverse(a))));\n\t\t} else {\n\t\t\treturn a;\n\t\t}\n\t});\n}\n\n/*\n * Pojo L3 constructors\n */\nconst has = (obj,prop) => obj.hasOwnProperty(prop);\nexport const m = (...a) => a.reduce((o,{$key,$value}) => {\n\to[$key] = $value;\n\treturn o;\n},{});\nexport const l = (...a) => a;\nexport const e = (qname,...a) => {\n\t// check if first arg is attrMap\n\tconst len = a.length;\n\tconst node = {};\n\tnode.$name = qname;\n\tnode.$children = [];\n\tfor(let i = 0; i < len; i++) {\n\t\tlet c = a[i];\n\t\tif(typeof c == \"function\") c = c();\n\t\tif(has(c,\"$key\")) {\n\t\t\tnode[c.$key] = c.$value;\n\t\t} else {\n\t\t\tnode.$children.push(c);\n\t\t}\n\t}\n\treturn node;\n};\nexport const a = (key,val) => ({$key:key,$value:val});\n"],"file":"type.js"}