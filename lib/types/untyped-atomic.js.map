{"version":3,"sources":["../../src/types/untyped-atomic.js"],"names":["UntypedAtomic","String","constructor","a","_value","toString","valueOf"],"mappings":";;;;;;;AAAO,MAAMA,aAAN,SAA4BC,MAA5B,CAAmC;AACzCC,cAAYC,CAAZ,EAAe;AACd,UAAMA,CAAN;AACA,SAAKC,MAAL,GAAcD,CAAd;AACA,GAJwC,CAKzC;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;;;AACAE,aAAW;AACV,WAAO,KAAKD,MAAL,CAAYC,QAAZ,EAAP;AACA;;AACDC,YAAU;AACT,WAAO,KAAKF,MAAL,CAAYE,OAAZ,EAAP;AACA;;AAzBwC;;;eA4B3BN,a","sourcesContent":["export class UntypedAtomic extends String {\r\n\tconstructor(a) {\r\n\t\tsuper(a);\r\n\t\tthis._value = a;\r\n\t}\r\n\t//cast(other) {\r\n\t//If the atomic value is an instance of xdt:untypedAtomic\r\n\t//and the other is an instance of a numeric type,\r\n\t//then the xdt:untypedAtomic value is cast to the type xs:double.\r\n\r\n\t//If the atomic value is an instance of xdt:untypedAtomic\r\n\t//and the other is an instance of xdt:untypedAtomic or xs:string,\r\n\t//then the xdt:untypedAtomic value is cast to the type xs:string.\r\n\r\n\t//If the atomic value is an instance of xdt:untypedAtomic\r\n\t//and the other is not an instance of xs:string, xdt:untypedAtomic, or any numeric type,\r\n\t//then the xdt:untypedAtomic value is cast to the dynamic type of the other value.\r\n\r\n\t// NO-OP, moved elsewhere\r\n\t//}\r\n\ttoString() {\r\n\t\treturn this._value.toString();\r\n\t}\r\n\tvalueOf() {\r\n\t\treturn this._value.valueOf();\r\n\t}\r\n}\r\n\r\nexport default UntypedAtomic;\r\n"],"file":"untyped-atomic.js"}