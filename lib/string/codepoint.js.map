{"version":3,"sources":["../../src/string/codepoint.js"],"names":["stringToCodepoints","str","c","codePointAt","codepointsToString","a","_","String","fromCodePoint"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA;AACO,SAASA,kBAAT,CAA4BC,GAA5B,EAAgC;AACtC,SAAO,kBAAQ,eAAKA,GAAL,CAAR,EAAkBC,KAAKA,EAAEC,WAAF,CAAc,CAAd,CAAvB,CAAP;AACA;;AAEM,SAASC,kBAAT,CAA4BC,CAA5B,EAA8B;AACpC,SAAO,uBAAW,kBAAQA,CAAR,EAAUC,KAAKC,OAAOC,aAAP,CAAqBF,IAAE,EAAvB,CAAf,CAAX,CAAP;AACA","sourcesContent":["import { from, forEach } from \"../seq\";\r\n\r\nimport { stringJoin } from \"./value\";\r\n\r\n// TODO: use HOF from iterop: observables or transducers over iterables\r\nexport function stringToCodepoints(str){\r\n\treturn forEach(from(str),c => c.codePointAt(0));\r\n}\r\n\r\nexport function codepointsToString(a){\r\n\treturn stringJoin(forEach(a,_ => String.fromCodePoint(_+\"\")));\r\n}\r\n"],"file":"codepoint.js"}