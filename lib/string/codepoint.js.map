{"version":3,"sources":["../../src/string/codepoint.js"],"names":["stringToCodepoints","str","c","codePointAt","codepointsToString","a","_","String","fromCodePoint","toString"],"mappings":";;;;;;;;AAAA;;AAEA;;AAEA;AACO,SAASA,kBAAT,CAA4BC,GAA5B,EAAgC;AACtC,SAAO,kBAAIC,KAAKA,EAAEC,WAAF,CAAc,CAAd,CAAT,EAA2BF,GAA3B,CAAP;AACA;;AAEM,SAASG,kBAAT,CAA4BC,CAA5B,EAA8B;AACpC,SAAO,uBAAW,kBAAIC,KAAKC,OAAOC,aAAP,CAAqBF,EAAEG,QAAF,EAArB,EAAmCJ,CAAnC,CAAT,CAAX,CAAP;AACA","sourcesContent":["import { forEach as map } from \"../seq\";\r\n\r\nimport { stringJoin } from \"./value\";\r\n\r\n// TODO: use HOF from iterop: observables or transducers over iterables\r\nexport function stringToCodepoints(str){\r\n\treturn map(c => c.codePointAt(0))(str);\r\n}\r\n\r\nexport function codepointsToString(a){\r\n\treturn stringJoin(map(_ => String.fromCodePoint(_.toString())(a)));\r\n}\r\n"],"file":"codepoint.js"}