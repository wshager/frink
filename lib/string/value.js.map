{"version":3,"sources":["../../src/string/value.js"],"names":["stringJoin","a","sep","acc","x","concat","args","substring","str","s","l","Math","round","substr","stringLength","normalizeSpace","replace","normalizeUnicode","form","normalize","toUpperCase","upperCase","lowerCase","toLowerCase","translate","mapStr","transStr","m","Array","from","t","reduce","c","idx"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AAEO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,MAAM,EAA7B,EAAiC;AACvC,SAAO,mBAAOD,CAAP,EAAS,CAACE,GAAD,EAAMC,CAAN,KAAYD,MAAMD,GAAN,GAAYE,CAAjC,CAAP;AACA,C,CAED;;;AACO,SAASC,MAAT,CAAgB,GAAGC,IAAnB,EAAyB;AAC/B,SAAON,WAAW,mBAASM,IAAT,CAAX,CAAP;AACA;;AAEM,SAASC,SAAT,CAAmBC,GAAnB,EAAuBC,CAAvB,EAAyBC,CAAzB,EAA4B;AAClCD,MAAIE,KAAKC,KAAL,CAAWH,CAAX,IAAgB,CAApB;AACA,SAAO,mBAAQC,CAAR,IAAaF,IAAIK,MAAJ,CAAWJ,CAAX,CAAb,GAA6BD,IAAIK,MAAJ,CAAWJ,CAAX,EAAaE,KAAKC,KAAL,CAAWF,CAAX,CAAb,CAApC;AACA;;AAEM,SAASI,YAAT,CAAsBN,GAAtB,EAA2B;AACjC,SAAO,sBAAWA,GAAX,CAAP;AACA;;AAEM,SAASO,cAAT,CAAwBP,GAAxB,EAA6B;AACnC,SAAOA,IAAIQ,OAAJ,CAAY,sCAAZ,EAAmD,EAAnD,EAAuDA,OAAvD,CAA+D,mBAA/D,EAAmF,GAAnF,CAAP;AACA;;AAEM,SAASC,gBAAT,CAA0BT,GAA1B,EAA8BU,IAA9B,EAAoC;AAC1C,SAAOV,IAAIW,SAAJ,CAAcD,KAAKE,WAAL,EAAd,CAAP;AACA;;AAEM,SAASC,SAAT,CAAmBb,GAAnB,EAAwB;AAC9B,SAAOA,IAAIY,WAAJ,EAAP;AACA;;AAEM,SAASE,SAAT,CAAmBd,GAAnB,EAAwB;AAC9B,SAAOA,IAAIe,WAAJ,EAAP;AACA;;AAEM,SAASC,SAAT,CAAmBhB,GAAnB,EAAwBiB,MAAxB,EAAgCC,QAAhC,EAA0C;AAChD,QAAMC,IAAIC,MAAMC,IAAN,CAAWJ,MAAX,CAAV;AAAA,QAA8BK,IAAIF,MAAMC,IAAN,CAAWH,QAAX,CAAlC;AACA,SAAOC,EAAEI,MAAF,CAAS,CAAC5B,GAAD,EAAK6B,CAAL,EAAOC,GAAP,KAAe9B,IAAIa,OAAJ,CAAYgB,CAAZ,EAAcF,EAAEG,GAAF,KAAU,EAAxB,CAAxB,EAAoDzB,GAApD,CAAP;AACA","sourcesContent":["import { foldLeft as reduce, fromArgs } from \"../seq\";\r\n\r\nimport { isUndef, ucs2length } from \"../util\";\r\n\r\nexport function stringJoin(a, sep = \"\") {\r\n\treturn reduce(a,(acc, x) => acc + sep + x);\r\n}\r\n\r\n// TODO: use fromArgs function to flatten array of possible observables (maybe's)\r\nexport function concat(...args) {\r\n\treturn stringJoin(fromArgs(args));\r\n}\r\n\r\nexport function substring(str,s,l) {\r\n\ts = Math.round(s) - 1;\r\n\treturn isUndef(l) ? str.substr(s) : str.substr(s,Math.round(l));\r\n}\r\n\r\nexport function stringLength(str) {\r\n\treturn ucs2length(str);\r\n}\r\n\r\nexport function normalizeSpace(str) {\r\n\treturn str.replace(/^[\\x20\\x9\\xD\\xA]+|[\\x20\\x9\\xD\\xA]+$/g,\"\").replace(/[\\x20\\x9\\xD\\xA]+/g,\" \");\r\n}\r\n\r\nexport function normalizeUnicode(str,form) {\r\n\treturn str.normalize(form.toUpperCase());\r\n}\r\n\r\nexport function upperCase(str) {\r\n\treturn str.toUpperCase();\r\n}\r\n\r\nexport function lowerCase(str) {\r\n\treturn str.toLowerCase();\r\n}\r\n\r\nexport function translate(str, mapStr, transStr) {\r\n\tconst m = Array.from(mapStr), t = Array.from(transStr);\r\n\treturn m.reduce((acc,c,idx) => acc.replace(c,t[idx] || \"\"),str);\r\n}\r\n"],"file":"value.js"}