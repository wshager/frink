{"version":3,"sources":["../../src/string/value.js"],"names":["stringJoin","a","sep","acc","x","concat","args","join","substring","str","s","l","Math","round","substr","stringLength","normalizeSpace","replace","normalizeUnicode","form","normalize","toUpperCase","upperCase","lowerCase","toLowerCase","translate","mapStr","transStr","m","Array","from","t","reduce","c","idx"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AAEO,SAASA,UAAT,CAAoBC,CAApB,EAAuBC,GAAG,GAAG,EAA7B,EAAiC;AACvC,SAAO,mBAAS,EAAT,EAAY,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGD,GAAN,GAAYE,CAApC,EAAuCH,CAAvC,CAAP;AACA,C,CAED;;;AACO,SAASI,MAAT,CAAgB,GAAGC,IAAnB,EAAyB;AAC/B,SAAOA,IAAI,CAACC,IAAL,CAAU,EAAV,CAAP;AACA;;AAEM,SAASC,SAAT,CAAmBC,GAAnB,EAAuBC,CAAvB,EAAyBC,CAAzB,EAA4B;AAClCD,EAAAA,CAAC,GAAGE,IAAI,CAACC,KAAL,CAAWH,CAAX,IAAgB,CAApB;AACA,SAAO,mBAAQC,CAAR,IAAaF,GAAG,CAACK,MAAJ,CAAWJ,CAAX,CAAb,GAA6BD,GAAG,CAACK,MAAJ,CAAWJ,CAAX,EAAaE,IAAI,CAACC,KAAL,CAAWF,CAAX,CAAb,CAApC;AACA;;AAEM,SAASI,YAAT,CAAsBN,GAAtB,EAA2B;AACjC,SAAO,sBAAWA,GAAX,CAAP;AACA;;AAEM,SAASO,cAAT,CAAwBP,GAAxB,EAA6B;AACnC,SAAOA,GAAG,CAACQ,OAAJ,CAAY,sCAAZ,EAAmD,EAAnD,EAAuDA,OAAvD,CAA+D,mBAA/D,EAAmF,GAAnF,CAAP;AACA;;AAEM,SAASC,gBAAT,CAA0BT,GAA1B,EAA8BU,IAA9B,EAAoC;AAC1C,SAAOV,GAAG,CAACW,SAAJ,CAAcD,IAAI,CAACE,WAAL,EAAd,CAAP;AACA;;AAEM,SAASC,SAAT,CAAmBb,GAAnB,EAAwB;AAC9B,SAAOA,GAAG,CAACY,WAAJ,EAAP;AACA;;AAEM,SAASE,SAAT,CAAmBd,GAAnB,EAAwB;AAC9B,SAAOA,GAAG,CAACe,WAAJ,EAAP;AACA;;AAEM,SAASC,SAAT,CAAmBhB,GAAnB,EAAwBiB,MAAxB,EAAgCC,QAAhC,EAA0C;AAChD,QAAMC,CAAC,GAAGC,KAAK,CAACC,IAAN,CAAWJ,MAAX,CAAV;AAAA,QAA8BK,CAAC,GAAGF,KAAK,CAACC,IAAN,CAAWH,QAAX,CAAlC;AACA,SAAOC,CAAC,CAACI,MAAF,CAAS,CAAC7B,GAAD,EAAK8B,CAAL,EAAOC,GAAP,KAAe/B,GAAG,CAACc,OAAJ,CAAYgB,CAAZ,EAAcF,CAAC,CAACG,GAAD,CAAD,IAAU,EAAxB,CAAxB,EAAoDzB,GAApD,CAAP;AACA","sourcesContent":["import { foldLeft } from \"../seq\";\n\nimport { isUndef, ucs2length } from \"../util\";\n\nexport function stringJoin(a, sep = \"\") {\n\treturn foldLeft(\"\",(acc, x) => acc + sep + x)(a);\n}\n\n// TODO: use fromArgs function to flatten array of possible observables (maybe's)\nexport function concat(...args) {\n\treturn args.join(\"\");\n}\n\nexport function substring(str,s,l) {\n\ts = Math.round(s) - 1;\n\treturn isUndef(l) ? str.substr(s) : str.substr(s,Math.round(l));\n}\n\nexport function stringLength(str) {\n\treturn ucs2length(str);\n}\n\nexport function normalizeSpace(str) {\n\treturn str.replace(/^[\\x20\\x9\\xD\\xA]+|[\\x20\\x9\\xD\\xA]+$/g,\"\").replace(/[\\x20\\x9\\xD\\xA]+/g,\" \");\n}\n\nexport function normalizeUnicode(str,form) {\n\treturn str.normalize(form.toUpperCase());\n}\n\nexport function upperCase(str) {\n\treturn str.toUpperCase();\n}\n\nexport function lowerCase(str) {\n\treturn str.toLowerCase();\n}\n\nexport function translate(str, mapStr, transStr) {\n\tconst m = Array.from(mapStr), t = Array.from(transStr);\n\treturn m.reduce((acc,c,idx) => acc.replace(c,t[idx] || \"\"),str);\n}\n"],"file":"value.js"}