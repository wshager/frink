{"version":3,"sources":["../src/array.js"],"names":["List","rrb","empty","constructor","prototype","__is_List","_type","l","x","push","TreeIterator","call","$","$k","$v","len","arguments","length","get","set","module","exports","array","a","f","seqFoldLeft","iterFoldLeft","acc","reduce","join","$a","undefined","pre","cur","concat","head","tail","slice","size","count","subarray","s","Math","max","Number","insertBefore","i","v","pop","remove","append","reverse","fromArray","toJS","flatten","filter","fn","forEach","foldLeft","z"],"mappings":"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","sourcesContent":["import * as rrb from \"rrb-vector\";\r\n\r\nimport { error } from \"./error\";\r\n\r\nimport { from } from \"rxjs\";\r\n\r\nimport { isSeq, foldLeft as seqFoldLeft, forEach as seqForEach, filter as seqFilter } from \"./seq\";\r\n\r\nimport { foldLeft as iterFoldLeft } from \"./iter-util\";\r\n\r\n// TODO option: call ensureDoc and handle everything via VNode (i.e. persistent or not)\r\n//import { ensureDoc } from \"./doc\";\r\n\r\n//import { list } from \"./access\";\r\n\r\nimport { isUndef } from \"./util\";\r\n\r\nvar List = rrb.empty.constructor;\r\n\r\nList.prototype.__is_List = true;\r\n\r\nList.prototype._type = 5;\r\n\r\nList.prototype[\"@@transducer/init\"] = function(){\r\n\treturn rrb.empty;\r\n};\r\n\r\nList.prototype[\"@@transducer/step\"] = function(l,x) {\r\n\treturn l.push(x);\r\n};\r\n\r\nList.prototype[\"@@transducer/result\"] = function(l) {\r\n\treturn l;\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/init\"] = function(){\r\n\treturn rrb.empty;\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/step\"] = function(l,x) {\r\n\treturn l.push(x);\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/result\"] = function(l) {\r\n\treturn l;\r\n};\r\n\r\n\r\nList.prototype.call = function($,$k,$v){\r\n\tconst len = arguments.length;\r\n\treturn len == 2 ? get(this,$k) : len == 3 ? set(this,$k,$v) : this;\r\n};\r\n\r\nmodule.exports.List = List;\r\n\r\nexport function array(...a) {\r\n\tconst l = a.length;\r\n\tif (l === 0) {\r\n\t\treturn rrb.empty;\r\n\t}\r\n\tif(l == 1) {\r\n\t\ta = a[0];\r\n\t\tconst f = isSeq(a) ? seqFoldLeft : iterFoldLeft;\r\n\t\treturn f(rrb.empty,(acc,a) => acc.push(a))(a);\r\n\t}\r\n\treturn a.reduce((acc,a) => acc.push(a),rrb.empty);\r\n}\r\n\r\nexport function join($a) {\r\n\tif ($a === undefined) return error(\"XPTY0004\");\r\n\t// assume a sequence of vectors\r\n\treturn seqFoldLeft(rrb.empty,(pre, cur) => {\r\n\t\t// TODO force persistent cx\r\n\t\t//if (list()(cur)) cur = cur.toArray();\r\n\t\t//if (!isList(cur)) return error(\"XPTY0004\", \"One of the items for array:join is not an array.\");\r\n\t\treturn rrb.concat(pre, cur);\r\n\t})($a);\r\n}\r\n\r\n// TODO iterator to Observable using transducer protocol\r\n// at the completion of the operation, create a new list\r\n// array:transform($input, ... functions) => zeroOrOne()\r\n// for now:\r\nexport function head(a) {\r\n\treturn rrb.get(a,0);\r\n}\r\n\r\nexport function tail(a) {\r\n\treturn rrb.slice(a,1);\r\n}\r\n\r\nexport function size(a) {\r\n\treturn a.count();\r\n}\r\n\r\nexport function subarray(a, s, l) {\r\n\ts = s - 1;\r\n\treturn isUndef(l) ?\r\n\t\trrb.slice(a, s) :\r\n\t\trrb.slice(a, s, Math.max(s + Number(l), 0));\r\n}\r\n\r\nexport function insertBefore(a, i, v) {\r\n\ti = i - 1;\r\n\treturn a.slice(0, i).push(v).concat(a.slice(i));\r\n}\r\n\r\n\r\nexport function pop(a) {\r\n\treturn a.pop();\r\n}\r\n\r\nexport function set(a,i,v) {\r\n\treturn a.set(i,v);\r\n}\r\n\r\nexport function remove(a, i) {\r\n\treturn a.slice(0, i - 1).concat(a.slice(i));\r\n}\r\n\r\nexport function append(a, v) {\r\n\treturn a.push(v);\r\n}\r\n\r\nexport function reverse(a) {\r\n\treturn rrb.fromArray(a.toJS(true).reverse());\r\n}\r\n\r\nexport function flatten(a) {\r\n\treturn from(a);\r\n}\r\n\r\nexport function filter(a,fn) {\r\n\treturn seqFilter(flatten(a),fn).reduce((acc,x) => acc.push(x),rrb.empty);\r\n}\r\n\r\nexport function forEach(a,fn) {\r\n\treturn seqForEach(flatten(a),fn).reduce((acc,x) => acc.push(x),rrb.empty);\r\n}\r\n\r\nexport function get(a, i) {\r\n\treturn a.size ? a.get(i - 1) : null;\r\n}\r\n\r\nexport function foldLeft(a, z, f) {\r\n\treturn seqFoldLeft(flatten(a), z, f);\r\n}\r\n"],"file":"array.js"}