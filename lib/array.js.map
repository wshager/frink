{"version":3,"sources":["../src/array.js"],"names":["List","rrb","empty","constructor","prototype","__is_List","_type","l","x","push","TreeIterator","call","$","$k","$v","len","arguments","length","get","set","module","exports","array","a","reduce","acc","join","$a","undefined","pre","cur","concat","head","tail","slice","size","count","subarray","s","valueOf","Math","max","Number","insertBefore","i","v","pop","remove","append","reverse","fromArray","toJS","flatten","filter","fn","forEach","foldLeft","z","f"],"mappings":"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","sourcesContent":["import * as rrb from \"rrb-vector\";\r\n\r\nimport { error } from \"./error\";\r\n\r\nimport { isSeq, foldLeft as seqFoldLeft, forEach as seqForEach, filter as seqFilter, from } from \"./seq\";\r\n\r\n// TODO option: call ensureDoc and handle everything via VNode (i.e. persistent or not)\r\n//import { ensureDoc } from \"./doc\";\r\n\r\n//import { list } from \"./access\";\r\n\r\nimport { isUndef } from \"./util\";\r\n\r\nvar List = rrb.empty.constructor;\r\n\r\nList.prototype.__is_List = true;\r\n\r\nList.prototype._type = 5;\r\n\r\nList.prototype[\"@@transducer/init\"] = function(){\r\n\treturn rrb.empty;\r\n};\r\n\r\nList.prototype[\"@@transducer/step\"] = function(l,x) {\r\n\treturn l.push(x);\r\n};\r\n\r\nList.prototype[\"@@transducer/result\"] = function(l) {\r\n\treturn l;\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/init\"] = function(){\r\n\treturn rrb.empty;\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/step\"] = function(l,x) {\r\n\treturn l.push(x);\r\n};\r\n\r\nrrb.TreeIterator.prototype[\"@@transducer/result\"] = function(l) {\r\n\treturn l;\r\n};\r\n\r\n\r\nList.prototype.call = function($,$k,$v){\r\n\tconst len = arguments.length;\r\n\treturn len == 2 ? get(this,$k) : len == 3 ? set(this,$k,$v) : this;\r\n};\r\n\r\nmodule.exports.List = List;\r\n\r\nexport function array(...a) {\r\n\tconst l = a.length;\r\n\tif (l === 0) {\r\n\t\treturn rrb.empty;\r\n\t}\r\n\tif(l == 1) {\r\n\t\ta = a[0];\r\n\t\treturn isSeq(a) ? a.reduce((acc,a) => acc.push(a),rrb.empty) : rrb.empty.push(a);\r\n\t}\r\n\treturn a.reduce((acc,a) => acc.push(a),rrb.empty);\r\n}\r\n\r\nexport function join($a) {\r\n\tif ($a === undefined) return error(\"XPTY0004\");\r\n\t// assume a sequence of vectors\r\n\treturn seqFoldLeft((pre, cur) => {\r\n\t\t// TODO force persistent cx\r\n\t\t//if (list()(cur)) cur = cur.toArray();\r\n\t\t//if (!isList(cur)) return error(\"XPTY0004\", \"One of the items for array:join is not an array.\");\r\n\t\treturn rrb.concat(pre, cur);\r\n\t}, rrb.empty)($a);\r\n}\r\n\r\n// TODO iterator to Observable using transducer protocol\r\n// at the completion of the operation, create a new list\r\n// array:transform($input, ... functions) => zeroOrOne()\r\n// for now:\r\nexport function head(a) {\r\n\treturn rrb.get(a,0);\r\n}\r\n\r\nexport function tail(a) {\r\n\treturn rrb.slice(a,1);\r\n}\r\n\r\nexport function size(a) {\r\n\treturn a.count();\r\n}\r\n\r\nexport function subarray(a, s, l) {\r\n\ts = s.valueOf() - 1;\r\n\treturn isUndef(l) ?\r\n\t\trrb.slice(a, s) :\r\n\t\tl => rrb.slice(a, s, Math.max(s + Number(l), 0));\r\n}\r\n\r\nexport function insertBefore(a, i, v) {\r\n\treturn a.slice(0, i).push(v).concat(a.slice(i));\r\n}\r\n\r\n\r\nexport function pop(a) {\r\n\treturn a.pop();\r\n}\r\n\r\nexport function set(a,i,v) {\r\n\treturn a.set(i,v);\r\n}\r\n\r\nexport function remove(a, i) {\r\n\treturn a.slice(0, i - 1).concat(a.slice(i));\r\n}\r\n\r\nexport function append(a, v) {\r\n\treturn a.push(v);\r\n}\r\n\r\nexport function reverse(a) {\r\n\treturn rrb.fromArray(a.toJS(true).reverse());\r\n}\r\n\r\nexport function flatten(a) {\r\n\treturn from(a);\r\n}\r\n\r\nexport function filter(a,fn) {\r\n\treturn seqFilter(flatten(a),fn).reduce((acc,x) => acc.push(x),rrb.empty);\r\n}\r\n\r\nexport function forEach(a,fn) {\r\n\treturn seqForEach(flatten(a),fn).reduce((acc,x) => acc.push(x),rrb.empty);\r\n}\r\n\r\nexport function get(a, i) {\r\n\treturn a.size ? a.get(i - 1) : null;\r\n}\r\n\r\nexport function foldLeft(a, z, f) {\r\n\treturn seqFoldLeft(flatten(a), z, f);\r\n}\r\n"],"file":"array.js"}