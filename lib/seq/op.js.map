{"version":3,"sources":["../../src/seq/op.js"],"names":["empty","s","exists","not","head","$a","tail","insertBefore","$s","pos","$ins","remove","i","skip","reverse","a","subsequence","l","d"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;;;AAEO,MAAMA,KAAK,GAAGC,CAAC,IAAI,gBAAMA,CAAN,IAAW,0BAAUA,CAAV,CAAX,GAA0B,kBAAOA,CAAP,CAA7C;;;;AAEA,MAAMC,MAAM,GAAGD,CAAC,IAAI,gBAAMA,CAAN,IAAW,gBAAK,yBAAL,EAAe,oBAAIE,SAAJ,CAAf,EAAyBF,CAAzB,CAAX,GAAyC,CAAC,kBAAOA,CAAP,CAA9D;;;;AAEA,SAASG,IAAT,CAAcC,EAAd,EAAiB;AACvB,SAAO,kBAAOA,EAAP,KAAc,CAAC,gBAAMA,EAAN,CAAf,GAA2BA,EAA3B,GAAgC,qBAAK,CAAL,EAAQA,EAAR,CAAvC;AACA;;AAEM,SAASC,IAAT,CAAcD,EAAd,EAAiB;AACvB,SAAO,kBAAOA,EAAP,KAAc,CAAC,gBAAMA,EAAN,CAAf,GAA2B,IAA3B,GAAkC,qBAAK,CAAL,EAAQA,EAAR,CAAzC;AACA;;AAEM,SAASE,YAAT,CAAsBC,EAAtB,EAAyBC,GAAzB,EAA6BC,IAA7B,EAAmC;AACzC,SAAO,gBAAK,qBAAKD,GAAG,GAAG,CAAX,CAAL,EAAmB,sBAAM,cAAIC,IAAJ,CAAN,EAAgB,qBAAKD,GAAL,CAAhB,CAAnB,EAA+C,cAAID,EAAJ,CAA/C,CAAP;AACA;;AAEM,SAASG,MAAT,CAAgBN,EAAhB,EAAmBO,CAAnB,EAAqB;AAC3B,MAAG,mBAAQA,CAAR,CAAH,EAAe,OAAO,oBAAM,UAAN,CAAP;AACfP,EAAAA,EAAE,GAAG,cAAIA,EAAJ,CAAL;AACA,SAAO,sBAAM,qBAAKO,CAAC,GAAG,CAAJ,GAAQ,CAAR,GAAYA,CAAC,GAAG,CAArB,EAAwBP,EAAxB,CAAN,EAAkCA,EAAE,CAACQ,IAAH,CAAQD,CAAR,CAAlC,CAAP;AACA;;AAEM,SAASE,OAAT,CAAiBT,EAAjB,EAAqB;AAC3B,SAAO,CAAC,gBAAMA,EAAN,CAAD,GAAaA,EAAb,GAAkB,gBAAK,yBAAL,EAAe,yBAASU,CAAC,IAAIA,CAAC,CAACD,OAAF,EAAd,CAAf,EAA2CT,EAA3C,CAAzB;AACA;;AAEM,SAASW,WAAT,CAAqBX,EAArB,EAAwBO,CAAxB,EAA0BK,CAAC,GAAC,CAA5B,EAA8B;AACpC,MAAG,mBAAQL,CAAR,CAAH,EAAe,OAAO,oBAAM,UAAN,CAAP;AACfP,EAAAA,EAAE,GAAG,cAAIA,EAAJ,CAAL;AACAO,EAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACA,MAAIM,CAAC,GAAGN,CAAC,GAAG,CAAJ,GAAQA,CAAR,GAAY,CAApB;AACA,SAAOK,CAAC,KAAK,CAAN,GAAU,qBAAKL,CAAL,EAAQP,EAAR,CAAV,GAAwB,gBAAK,qBAAKO,CAAL,CAAL,EAAa,qBAAKK,CAAC,GAAGC,CAAT,CAAb,EAA0Bb,EAA1B,CAA/B;AACA","sourcesContent":["import { seq, isSeq } from \"../seq\";\n\nimport { isNull, isUndef } from \"../util\";\n\nimport { pipe } from \"rxjs\";\n\nimport { isEmpty, map, take, skip, merge, mergeMap, toArray } from \"rxjs/operators\";\n\nimport { not } from \"../impl\";\n\nimport error from \"../error\";\n\nexport const empty = s => isSeq(s) ? isEmpty()(s) : isNull(s);\n\nexport const exists = s => isSeq(s) ? pipe(isEmpty(),map(not))(s) : !isNull(s);\n\nexport function head($a){\n\treturn isNull($a) || !isSeq($a) ? $a : take(1)($a);\n}\n\nexport function tail($a){\n\treturn isNull($a) || !isSeq($a) ? null : skip(1)($a);\n}\n\nexport function insertBefore($s,pos,$ins) {\n\treturn pipe(take(pos - 1),merge(seq($ins),skip(pos)))(seq($s));\n}\n\nexport function remove($a,i){\n\tif(isUndef(i)) return error(\"XPST0017\");\n\t$a = seq($a);\n\treturn merge(take(i < 1 ? 0 : i - 1)($a),$a.skip(i));\n}\n\nexport function reverse($a) {\n\treturn !isSeq($a) ? $a : pipe(toArray(),mergeMap(a => a.reverse()))($a);\n}\n\nexport function subsequence($a,i,l=0){\n\tif(isUndef(i)) return error(\"XPST0017\");\n\t$a = seq($a);\n\ti = i - 1;\n\tvar d = i < 0 ? i : 0;\n\treturn l === 0 ? skip(i)($a) : pipe(skip(i),take(l - d))($a);\n}\n"],"file":"op.js"}