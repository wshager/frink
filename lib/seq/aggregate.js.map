{"version":3,"sources":["../../src/seq/aggregate.js"],"names":["count","s","sum","add","avg","a","b","min","x","max"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,MAAMA,KAAK,GAAGC,CAAC,IAAI,gBAAMA,CAAN,IAAW,wBAAUA,CAAV,CAAX,GAA0B,CAA7C;;;;AAEA,MAAMC,GAAG,GAAGD,CAAC,IAAI,0BAAgBE,OAAhB,EAAqB,CAArB,EAAwBF,CAAxB,CAAjB;;;;AAEA,MAAMG,GAAG,GAAGH,CAAC,IAAI,oBAAUC,GAAG,CAACD,CAAD,CAAb,EAAiBI,CAAC,IAAI,oBAAUL,KAAK,CAACC,CAAD,CAAf,EAAoBK,CAAC,IAAI,gBAAOD,CAAP,EAASC,CAAT,CAAzB,CAAtB,CAAjB;;;;AAEA,MAAMC,GAAG,GAAGN,CAAC,IAAI,uBAAO,CAACI,CAAD,EAAGG,CAAH,KAAS,YAAGA,CAAH,EAAKH,CAAL,IAAUG,CAAV,GAAcH,CAA9B,EAAiCJ,CAAjC,CAAjB;;;;AAEA,MAAMQ,GAAG,GAAGR,CAAC,IAAI,uBAAO,CAACI,CAAD,EAAGG,CAAH,KAAS,YAAGA,CAAH,EAAKH,CAAL,IAAUG,CAAV,GAAcH,CAA9B,EAAiCJ,CAAjC,CAAjB","sourcesContent":["import { isSeq, foldLeftCurried, switchMap } from \"../seq\";\nimport { add, divide, gt, lt } from \"../op\";\nimport { count as rxCount, reduce } from \"rxjs/operators\";\n\nexport const count = s => isSeq(s) ? rxCount()(s) : 1;\n\nexport const sum = s => foldLeftCurried(add)(0)(s);\n\nexport const avg = s => switchMap(sum(s),a => switchMap(count(s), b => divide(a,b)));\n\nexport const min = s => reduce((a,x) => lt(x,a) ? x : a)(s);\n\nexport const max = s => reduce((a,x) => gt(x,a) ? x : a)(s);\n"],"file":"aggregate.js"}