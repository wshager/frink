{"version":3,"sources":["../src/access.js"],"names":["_vnodeFromCx","cx","node","vnode","children","$node","ensureDoc","bind","values","type","inode","depth","idx","firstChild","next","first","_nextOrPrev","dir","parent","sib","indexInParent","nextSibling","previousSibling","getDoc","lastChild","last","count","arguments","length","Axis","self","f","name","isVNode","n","__is_VNode","_isElement","_isAttribute","_isText","_isList","_isMap","_isPI","_isComment","_isLiteral","cxFilter","iterable","v","k","i","__cx","position","size","_isEq","a","b","_nodeTest","typeTest","qnameOrKey","undefined","hasWildcard","test","regex","RegExp","replace","isTuple","key","__Accessor","__is_NodeTypeTest","element","qname","list","keyOrIndex","map","processingInstruction","comment","_attrGet","entries","val","attr","attrEntries","kv","pair","attribute","$qname","text","value","g","__is_Axis","__type","child","siblingsOrSelf","select","paths","boundEnsureDoc","path","_axify","skipCompare","bound","_comparer","changeFn","has","_checked","set","WeakMap","$path","at","substring","isEmptyNode","$a"],"mappings":"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","sourcesContent":["import { ensureDoc } from \"l3n\";\r\n\r\nimport { error } from \"./error\";\r\n\r\nimport { seq, isSeq, forEach, filter, pipe, switchMap, foldLeft } from \"./seq\";\r\n\r\nimport { isUndef } from \"./util\";\r\n\r\nconst _vnodeFromCx = (cx,node) => cx && \"vnode\" in cx ? cx.vnode : node.cx.vnode;\r\n\r\nexport function children($node) {\r\n\tconst cx = this;\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => {\r\n\t\tconst vnode = _vnodeFromCx(cx,node);\r\n\t\tconst values = node.type == 2 ? [node.inode] : node.values();\r\n\t\tconst depth = node.depth + 1;\r\n\t\treturn forEach(values,(inode, idx) => vnode(inode,node,depth,idx + 1));\r\n\t});\r\n}\r\n\r\nexport function firstChild($node) {\r\n\tconst cx = this;\r\n\t// assume ensureDoc returns the correct node\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => {\r\n\t\tconst vnode = _vnodeFromCx(cx,node);\r\n\t\tlet next = node.first();\r\n\t\treturn next ? seq(vnode(next,node,node.depth + 1, 0)) : seq();\r\n\t});\r\n}\r\n\r\nconst _nextOrPrev = (cx,$node,dir) => {\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => {\r\n\t\tconst vnode = _vnodeFromCx(cx,node);\r\n\t\tvar parent = node.parent;\r\n\t\tconst sib = parent && parent[dir > 0 ? \"next\" : \"previous\"](node);\r\n\t\treturn sib ? seq(vnode(sib, parent, node.depth, node.indexInParent + dir)) : seq();\r\n\t});\r\n};\r\n\r\nexport function nextSibling($node){\r\n\treturn _nextOrPrev(this, $node, 1);\r\n}\r\n\r\nexport function previousSibling($node){\r\n\treturn _nextOrPrev(this, $node, -1);\r\n}\r\n\r\nexport function getDoc($node) {\r\n\tvar cx = this;\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => {\r\n\t\tdo {\r\n\t\t\tnode = node.parent;\r\n\t\t} while(node.parent);\r\n\t\treturn seq(node);\r\n\t});\r\n}\r\n\r\nexport function lastChild($node){\r\n\tvar cx = this;\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => {\r\n\t\tconst last = node.last();\r\n\t\tconst vnode = cx.vnode || node.cx.vnode;\r\n\t\treturn last ? seq(vnode(last, node, node.depth, node.count() - 1)) : seq();\r\n\t});\r\n}\r\n\r\nexport function parent($node) {\r\n\tif(!arguments.length) return Axis(parent);\r\n\tvar cx = this;\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => seq(node.parent));\r\n}\r\n\r\nexport function self(f) {\r\n\tif(f.name !== \"forEach\" && f.name !== \"filter\") f = forEach(f);\r\n\treturn Axis(node => node, f, 3);\r\n}\r\n\r\nexport const isVNode = n => !!n && n.__is_VNode;\r\n\r\nconst _isElement = n => isVNode(n) && n.type == 1;\r\n\r\nconst _isAttribute = n => isVNode(n) && n.type == 2;\r\n\r\nconst _isText = n => isVNode(n) && n.type == 3;\r\n\r\nconst _isList = n => isVNode(n) && n.type == 5;\r\n\r\nconst _isMap = n => isVNode(n) && n.type == 6;\r\n\r\nconst _isPI = n => isVNode(n) && n.type == 7;\r\n\r\nconst _isComment = n => isVNode(n) && n.type == 8;\r\n\r\nconst _isLiteral = n => isVNode(n) && n.type == 12;\r\n\r\nexport function cxFilter(iterable,f){\r\n\treturn filter(iterable,function(v,k,i){\r\n\t\tif(!isSeq(v) && !isVNode(v)) v = seq(v);\r\n\t\tv.__cx = [k,i];\r\n\t\treturn f(v,k,i);\r\n\t});\r\n}\r\n\r\nexport const position = n => n.__cx ? n.__cx[0] + 1 : n.indexInParent;\r\n\r\nexport const last = n => n.__cx ? n.__cx[1].size : n.parent ? n.parent.size : 1;\r\n\r\nconst _isEq = (a,b) => a === b;\r\n\r\n// TODO convert qname to integer when parent is array\r\nfunction _nodeTest(typeTest,qnameOrKey) {\r\n\tvar f;\r\n\tif (qnameOrKey === undefined) {\r\n\t\tf = typeTest;\r\n\t} else {\r\n\t\tvar hasWildcard = /\\*/.test(qnameOrKey);\r\n\t\tif (hasWildcard) {\r\n\t\t\tvar regex = new RegExp(qnameOrKey.replace(/\\*/, \"(\\\\w[\\\\w0-9-_]*)\"));\r\n\t\t\tf = n => {\r\n\t\t\t\tlet isTuple = n.parent.type == 6;\r\n\t\t\t\tif(isTuple || n.name) {\r\n\t\t\t\t\treturn typeTest(n) && regex.test(isTuple ? n.key : n.name);\r\n\t\t\t\t}\r\n\t\t\t\treturn typeTest(n);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tf = n => {\r\n\t\t\t\tlet isTuple = n.parent.type == 6;\r\n\t\t\t\tif(isTuple || n.name) {\r\n\t\t\t\t\treturn _isEq(isTuple ? n.key : n.name,qnameOrKey) && typeTest(n);\r\n\t\t\t\t}\r\n\t\t\t\treturn typeTest(n);\r\n\t\t\t};\r\n\t\t\tf.__Accessor = qnameOrKey;\r\n\t\t}\r\n\t}\r\n\tf.__is_NodeTypeTest = true;\r\n\treturn f;\r\n}\r\n\r\nexport function element(qname) {\r\n\treturn _nodeTest(_isElement,qname);\r\n}\r\n\r\nexport function list(keyOrIndex) {\r\n\treturn _nodeTest(_isList,keyOrIndex);\r\n}\r\n\r\nexport function map() {\r\n\treturn _nodeTest(_isMap);\r\n}\r\n\r\nexport function processingInstruction() {\r\n\treturn _nodeTest(_isPI);\r\n}\r\n\r\nexport function comment() {\r\n\treturn _nodeTest(_isComment);\r\n}\r\n\r\nfunction _attrGet(key,$node){\r\n\treturn switchMap($node,node => {\r\n\t\tvar entries;\r\n\t\tif (key !== null) {\r\n\t\t\tvar val = node.attr(key);\r\n\t\t\tif (!val) return [];\r\n\t\t\tentries = [[key, val]];\r\n\t\t} else {\r\n\t\t\tentries = node.attrEntries();\r\n\t\t}\r\n\t\treturn forEach(entries,function (kv) {\r\n\t\t\treturn node.vnode(node.pair(kv[0], kv[1]), node.parent, node.depth + 1, node.indexInParent);\r\n\t\t});\r\n\t});\r\n}\r\n\r\n// TODO make axis default, process node here, return seq(VNodeIterator)\r\n// TODO maybe have Axis receive post-process func/seq\r\nexport function attribute($qname) {\r\n\tif(isUndef($qname)) $qname = \"*\";\r\n\treturn switchMap($qname,qname => {\r\n\t\tvar hasWildcard = /\\*/.test(qname);\r\n\t\t// getter of attributes / pre-processor of attributes\r\n\t\t// TODO iterator!\r\n\t\t// filter of attributes\r\n\t\tvar f;\r\n\t\tif (hasWildcard) {\r\n\t\t\tvar regex = new RegExp(qname.replace(/\\*/, \"(\\\\w[\\\\w0-9-_]*)\"));\r\n\t\t\t//\tattrEntries returns tuples\r\n\t\t\tf = n => _isAttribute(n) && regex.test(n.name);\r\n\t\t\t// no direct access\r\n\t\t\tqname = null;\r\n\t\t} else {\r\n\t\t\t// name check provided by directAccess\r\n\t\t\tf = n => _isAttribute(n);\r\n\t\t}\r\n\t\treturn Axis(_attrGet.bind(null,qname),filter(f),2);\r\n\t});\r\n}\r\n\r\nexport function text() {\r\n\tvar f = n => _isText(n) && !!n.value;\r\n\tf.__is_NodeTypeTest = true;\r\n\treturn f;\r\n}\r\n\r\nexport function node() {\r\n\tvar f = n => _isElement(n) || (_isText(n) && !!n.value);\r\n\tf.__is_NodeTypeTest = true;\r\n\treturn seq(f);\r\n}\r\n\r\n// TODO create axis functions that return a function\r\n// child(element(qname))\r\n// works like a filter: filter(children(node|nodelist),n => element(qname,n))\r\n// nextSibling(element()): filter(nextSibling(node|nodelist),n => element(undefined,n))\r\n// filterOrGet: when f is called, and null or wildcard match was supplied as its qname parameter, call filter\r\n// else call get\r\n// if it is a seq, apply the function iteratively:\r\n// we don't want to filter all elements from a seq, we want to retrieve all elements from elements in a seq\r\n// final edge case: when node is of type array, and name is not an integer: filter\r\nfunction Axis(g,f,type){\r\n\treturn {\r\n\t\t__is_Axis: true,\r\n\t\t__type: type || 1,\r\n\t\tf:f,\r\n\t\tg:g\r\n\t};\r\n}\r\nexport function child(f) {\r\n\tconst cx = this;\r\n\tif(f.__is_NodeTypeTest){\r\n\t\t// this means it's a predicate, and the actual function should become a filter\r\n\t\tif(f.__Accessor) {\r\n\t\t\t// TODO this means we can try direct access on a node\r\n\t\t}\r\n\t\tf = filter(f);\r\n\t}\r\n\treturn Axis(node => children.bind(cx)(node),f);\r\n}\r\n\r\nexport function siblingsOrSelf($node){\r\n\tvar cx = this;\r\n\treturn switchMap(ensureDoc.bind(cx)($node),node => children.bind(cx)(node.parent));\r\n}\r\n\r\nexport function select($node, ...paths) {\r\n\tvar cx = this;\r\n\tvar boundEnsureDoc = ensureDoc.bind(cx);\r\n\treturn foldLeft(forEach(\r\n\t\tforEach(paths,path => _axify(path)),\r\n\t\t// we're passing $node here, because we want to update it every iteration\r\n\t\tpath => $node => {\r\n\t\t\t// make sure all paths are funcs\r\n\t\t\t// TODO skip self\r\n\t\t\tvar skipCompare = path.__type == 2 || path.__type == 3;\r\n\t\t\tvar f = path.f;\r\n\t\t\t// rebind step function to the context\r\n\t\t\tvar bound = function bound(n) {\r\n\t\t\t\treturn path.g(boundEnsureDoc(n));\r\n\t\t\t};\r\n\t\t\tif (!skipCompare) f = pipe(f, filter(_comparer()));\r\n\t\t\treturn switchMap($node,node => f(bound(node)));\r\n\t\t}),boundEnsureDoc($node),($node, changeFn) => changeFn($node));\r\n}\r\n\r\nfunction _comparer() {\r\n\t// dirty preserve state on function\r\n\tvar f = function (node) {\r\n\t\tvar has = f._checked.has(node);\r\n\t\tif (!has) f._checked.set(node,true);\r\n\t\treturn !has;\r\n\t};\r\n\tf._checked = new WeakMap();\r\n\treturn f;\r\n}\r\n\r\nfunction _axify($path){\r\n\treturn switchMap($path,path => {\r\n\t\tif(!path.__is_Axis){\r\n\t\t\t// process strings (can this be combined?)\r\n\t\t\tif (typeof path == \"string\") {\r\n\t\t\t\tvar at = /^@/.test(path);\r\n\t\t\t\tif (at) path = path.substring(1);\r\n\t\t\t\treturn at ? attribute(path) : child(element(path));\r\n\t\t\t} else if(typeof path == \"function\"){\r\n\t\t\t\tif(path.__is_NodeTypeTest) return child(path);\r\n\t\t\t\treturn self(path);\r\n\t\t\t} else {\r\n\t\t\t\treturn error(\"XXX\",\"Unknown axis provided\");\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn seq(path);\r\n\t});\r\n}\r\n\r\nexport function isEmptyNode(node){\r\n\tnode = ensureDoc.bind(this)(node);\r\n\tif(!isVNode(node)) return false;\r\n\tif(_isText(node) || _isLiteral(node) || _isAttribute(node)) return node.value === undefined;\r\n\treturn !node.count();\r\n}\r\n\r\nexport function name($a) {\r\n\tif(!arguments.length) return name;\r\n\treturn switchMap($a,a => {\r\n\t\tif (!isVNode(a)) {\r\n\t\t\treturn error(\"XXX\",\"This is not a node\");\r\n\t\t}\r\n\t\tif(a.type != 1) return null;\r\n\t\treturn a.name;\r\n\t});\r\n}\r\n"],"file":"access.js"}