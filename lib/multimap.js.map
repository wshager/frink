{"version":3,"sources":["../src/multimap.js"],"names":["MultiMap","_buckets","_size","__is_MultiMap","prototype","push","entry","key","bucket","__is_Bucket","Bucket","get","vals","_values","len","length","out","Array","i","keys","l","val","multimap"],"mappings":";;;;;;;AAAA,SAASA,QAAT,GAAmB;AAClB,OAAKC,QAAL,GAAgB,EAAhB;AACA,OAAKC,KAAL,GAAa,CAAb;AACA,OAAKC,aAAL,GAAqB,IAArB;AACA;;AAEDH,SAASI,SAAT,CAAmBC,IAAnB,GAA0B,UAASC,KAAT,EAAe;AACxC,MAAIC,MAAMD,MAAM,CAAN,CAAV;AACA,MAAIE,SAAS,KAAKP,QAAL,CAAcM,GAAd,CAAb;AACAD,QAAM,CAAN,IAAW,KAAKJ,KAAL,EAAX;;AACA,MAAGM,UAAUA,OAAOC,WAApB,EAAiC;AAChCD,WAAOH,IAAP,CAAYC,KAAZ;AACA,GAFD,MAEO;AACN,SAAKL,QAAL,CAAcM,GAAd,IAAqB,IAAIG,MAAJ,CAAWJ,KAAX,CAArB;AACA;;AACD,SAAO,IAAP;AACA,CAVD;;AAYAN,SAASI,SAAT,CAAmBO,GAAnB,GAAyB,UAASJ,GAAT,EAAa;AACrC,MAAIC,SAAS,KAAKP,QAAL,CAAcM,GAAd,CAAb;;AACA,MAAGC,UAAUA,OAAOC,WAApB,EAAiC;AAChC,QAAIG,OAAOJ,OAAOK,OAAlB;AAAA,QAA2BC,MAAMF,KAAKG,MAAtC;AACA,QAAGD,QAAQ,CAAX,EAAc;AACd,QAAGA,OAAO,CAAV,EAAa,OAAOF,KAAK,CAAL,EAAQ,CAAR,CAAP,CAHmB,CAIhC;;AACA,QAAII,MAAM,IAAIC,KAAJ,CAAUH,GAAV,CAAV;;AACA,SAAI,IAAII,IAAI,CAAZ,EAAeA,IAAIJ,GAAnB,EAAwBI,GAAxB,EAA6BF,IAAIE,CAAJ,IAASN,KAAKM,CAAL,EAAQ,CAAR,CAAT;;AAC7B,WAAOF,GAAP;AACA;AACD,CAXD;;AAaAhB,SAASI,SAAT,CAAmBe,IAAnB,GAA0B,YAAU;AACnC;AACA,MAAIA,OAAO,EAAX;;AACA,OAAI,IAAID,IAAE,CAAN,EAAQE,IAAE,KAAKnB,QAAL,CAAcc,MAA5B,EAAmCG,IAAEE,CAArC,EAAuCF,GAAvC,EAA4C;AAC3CC,SAAKD,CAAL,IAAU,KAAKjB,QAAL,CAAciB,CAAd,EAAiB,CAAjB,CAAV;AACA;;AACD,SAAOC,IAAP;AACA,CAPD;;AASA,SAAST,MAAT,CAAgBW,GAAhB,EAAoB;AACnB,OAAKR,OAAL,GAAe,CAACQ,GAAD,CAAf;AACA,OAAKZ,WAAL,GAAmB,IAAnB;AACA;;AAEDC,OAAON,SAAP,CAAiBC,IAAjB,GAAwB,UAASgB,GAAT,EAAa;AACpC,OAAKR,OAAL,CAAaR,IAAb,CAAkBgB,GAAlB;;AACA,SAAO,IAAP;AACA,CAHD;;AAKe,SAASC,QAAT,GAAmB;AACjC,SAAO,IAAItB,QAAJ,EAAP;AACA","sourcesContent":["function MultiMap(){\r\n\tthis._buckets = {};\r\n\tthis._size = 0;\r\n\tthis.__is_MultiMap = true;\r\n}\r\n\r\nMultiMap.prototype.push = function(entry){\r\n\tvar key = entry[0];\r\n\tvar bucket = this._buckets[key];\r\n\tentry[2] = this._size++;\r\n\tif(bucket && bucket.__is_Bucket) {\r\n\t\tbucket.push(entry);\r\n\t} else {\r\n\t\tthis._buckets[key] = new Bucket(entry);\r\n\t}\r\n\treturn this;\r\n};\r\n\r\nMultiMap.prototype.get = function(key){\r\n\tvar bucket = this._buckets[key];\r\n\tif(bucket && bucket.__is_Bucket) {\r\n\t\tvar vals = bucket._values, len = vals.length;\r\n\t\tif(len === 0) return;\r\n\t\tif(len == 1) return vals[0][1];\r\n\t\t// TODO fix order if needed\r\n\t\tvar out = new Array(len);\r\n\t\tfor(var i = 0; i < len; i++) out[i] = vals[i][1];\r\n\t\treturn out;\r\n\t}\r\n};\r\n\r\nMultiMap.prototype.keys = function(){\r\n\t// retain key types\r\n\tvar keys = [];\r\n\tfor(var i=0,l=this._buckets.length;i<l;i++) {\r\n\t\tkeys[i] = this._buckets[i][0];\r\n\t}\r\n\treturn keys;\r\n};\r\n\r\nfunction Bucket(val){\r\n\tthis._values = [val];\r\n\tthis.__is_Bucket = true;\r\n}\r\n\r\nBucket.prototype.push = function(val){\r\n\tthis._values.push(val);\r\n\treturn this;\r\n};\r\n\r\nexport default function multimap(){\r\n\treturn new MultiMap();\r\n}\r\n"],"file":"multimap.js"}