{"version":3,"sources":["../src/util.js"],"names":["id","a","toString","Object","prototype","isArray","Array","obj","call","isFunction","x","isObject","getPrototypeOf","isPromise","Promise","isNumber","isDOMNode","isNodeEnv","Node","isUntypedAtomic","constructor","name","isList","maybe","__is_List","isMap","__is_Map","isUndef","s","undefined","isNull","isUndefOrNull","DONE","done","regexAstralSymbols","ucs2length","string","counter","replace","length","value","charCodeAt","extra","range","n","arr","i","_isNode","isNode","global","process","e","camelCase","str","split","map","_","charAt","toUpperCase","substr","join"],"mappings":"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","sourcesContent":["// helpers\n\nexport const id = a => a;\n\nexport const toString = Object.prototype.toString;\n\nexport const isArray = typeof Array.isArray === \"function\" ? Array.isArray : function(obj) {\n\treturn toString.call(obj) == \"[object Array]\";\n};\n\nexport function isFunction(x) {\n\treturn typeof x === \"function\";\n}\n\nexport function isObject(x) {\n\treturn x instanceof Object &&\n\t\tObject.getPrototypeOf(x) === Object.getPrototypeOf({});\n}\n\nexport function isPromise(x) {\n\treturn !!x && x instanceof Promise;\n}\n\nexport function isNumber(x) {\n\treturn typeof x === \"number\";\n}\n\nexport function isDOMNode(x) {\n\treturn !isNodeEnv && x && x instanceof Node;\n}\n\nexport function isUntypedAtomic(x) {\n\treturn x instanceof Object && x.constructor.name == \"UntypedAtomic\";\n}\n\n\nexport function isList(maybe) {\n\treturn maybe && maybe.__is_List;\n}\n\n\nexport function isMap(maybe) {\n\treturn maybe && maybe.__is_Map;\n}\n\nexport const isUndef = s => s === undefined;\n\nexport const isNull = s => s === null;\n\nexport const isUndefOrNull = s => isUndef(s) || isNull(s);\n\nexport const DONE = {\n\tdone: true\n};\n\nconst regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nexport function ucs2length(string) {\n\tlet counter = 0;\n\tstring = string.replace(regexAstralSymbols,\"_\");\n\tconst length = string.length;\n\twhile (counter < length) {\n\t\tconst value = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// It's a high surrogate, and there is a next character.\n\t\t\tconst extra = string.charCodeAt(counter);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) counter++; // Low surrogate.\n\t\t}\n\t}\n\treturn counter;\n}\n\nexport function range(n) {\n\tvar arr = new Array(n);\n\tfor(var i=0; i<arr.length;) {\n\t\tarr[i] = ++i;\n\t}\n\treturn arr;\n}\n\nconst _isNode = () => {\n\tlet isNode = false;\n\ttry {\n\t\tisNode = Object.prototype.toString.call(global.process) === \"[object process]\";\n\t} catch(e) {\n\t\tisNode = false;\n\t}\n\treturn isNode;\n};\n// Only Node.JS has a process variable that is of [[Class]] process\nexport const isNodeEnv = _isNode();\n\nexport function camelCase(str) {\n\treturn str.split(/-/g).map((_,i) => i > 0 ? _.charAt(0).toUpperCase() + _.substr(1) : _).join(\"\");\n}\n"],"file":"util.js"}